---
source: src/custom/prelude/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1([1 x { i32, {}, {} }] %0) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %1 = alloca { i32, {}, {} }, align 8
  %2 = bitcast { i32, {}, {} }* %1 to [1 x { i32, {}, {} }]*
  store [1 x { i32, {}, {} }] %0, [1 x { i32, {}, {} }]* %2, align 4
  %3 = getelementptr { i32, {}, {} }, { i32, {}, {} }* %1, i64 0
  %4 = load { i32, {}, {} }, { i32, {}, {} }* %3, align 4
  store { i32, {}, {} } { i32 1, {} poison, {} undef }, { i32, {}, {} }* %3, align 4
  %5 = bitcast { i32, {}, {} }* %1 to [1 x { i32, {}, {} }]*
  %6 = load [1 x { i32, {}, {} }], [1 x { i32, {}, {} }]* %5, align 4
  %7 = insertvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } undef, { i32, {}, {} } %4, 0
  %8 = insertvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %7, [1 x { i32, {}, {} }] %6, 1
  %9 = insertvalue { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } { i32 1, { { i32, {}, {} }, [1 x { i32, {}, {} }] } poison, { { i32, {}, {} }, [1 x { i32, {}, {} }] } poison }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } %8, 2
  %10 = insertvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } undef, { i32, {}, {} } { i32 1, {} poison, {} undef }, 0
  %11 = insertvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %10, [1 x { i32, {}, {} }] %0, 1
  %12 = insertvalue { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } { i32 0, { { i32, {}, {} }, [1 x { i32, {}, {} }] } poison, { { i32, {}, {} }, [1 x { i32, {}, {} }] } poison }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } %11, 1
  %13 = icmp ult i64 0, 1
  %14 = select i1 %13, { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } %9, { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } %12
  %15 = extractvalue { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } %14, 0
  switch i32 %15, label %16 [
    i32 1, label %20
  ]

16:                                               ; preds = %entry_block
  %17 = extractvalue { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } %14, 1
  %18 = extractvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %17, 0
  %19 = extractvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %17, 1
  br label %cond_22_case_0

20:                                               ; preds = %entry_block
  %21 = extractvalue { i32, { { i32, {}, {} }, [1 x { i32, {}, {} }] }, { { i32, {}, {} }, [1 x { i32, {}, {} }] } } %14, 2
  %22 = extractvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %21, 0
  %23 = extractvalue { { i32, {}, {} }, [1 x { i32, {}, {} }] } %21, 1
  br label %cond_22_case_1

cond_22_case_0:                                   ; preds = %16
  %24 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 0
  %25 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 1
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %24, i8* %25)
  call void @abort()
  br label %cond_exit_22

cond_22_case_1:                                   ; preds = %20
  br label %cond_exit_22

cond_exit_22:                                     ; preds = %cond_22_case_1, %cond_22_case_0
  %"0.0" = phi { i32, {}, {} } [ zeroinitializer, %cond_22_case_0 ], [ %22, %cond_22_case_1 ]
  %"1.0" = phi [1 x { i32, {}, {} }] [ zeroinitializer, %cond_22_case_0 ], [ %23, %cond_22_case_1 ]
  %27 = alloca { i32, {}, {} }, align 8
  %28 = bitcast { i32, {}, {} }* %27 to [1 x { i32, {}, {} }]*
  store [1 x { i32, {}, {} }] %0, [1 x { i32, {}, {} }]* %28, align 4
  %29 = getelementptr { i32, {}, {} }, { i32, {}, {} }* %27, i64 0
  %30 = load { i32, {}, {} }, { i32, {}, {} }* %29, align 4
  %31 = insertvalue { { i32, {}, {} } } undef, { i32, {}, {} } %30, 0
  %32 = insertvalue { i32, {}, { { i32, {}, {} } } } { i32 1, {} poison, { { i32, {}, {} } } poison }, { { i32, {}, {} } } %31, 2
  %33 = icmp ult i64 0, 1
  %34 = select i1 %33, { i32, {}, { { i32, {}, {} } } } %32, { i32, {}, { { i32, {}, {} } } } { i32 0, {} undef, { { i32, {}, {} } } poison }
  %35 = extractvalue { i32, {}, { { i32, {}, {} } } } %34, 0
  switch i32 %35, label %36 [
    i32 1, label %38
  ]

36:                                               ; preds = %cond_exit_22
  %37 = extractvalue { i32, {}, { { i32, {}, {} } } } %34, 1
  br label %cond_7_case_0

38:                                               ; preds = %cond_exit_22
  %39 = extractvalue { i32, {}, { { i32, {}, {} } } } %34, 2
  %40 = extractvalue { { i32, {}, {} } } %39, 0
  br label %cond_7_case_1

cond_7_case_0:                                    ; preds = %36
  %41 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 0
  %42 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 1
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %41, i8* %42)
  call void @abort()
  br label %cond_exit_7

cond_7_case_1:                                    ; preds = %38
  br label %cond_exit_7

cond_exit_7:                                      ; preds = %cond_7_case_1, %cond_7_case_0
  %"025.0" = phi { i32, {}, {} } [ zeroinitializer, %cond_7_case_0 ], [ %40, %cond_7_case_1 ]
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
