---
source: src/custom/prelude/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  %"12_0" = alloca i64, align 8
  %"10_0" = alloca i64, align 8
  %"13_0" = alloca [2 x i64], align 8
  %"8_0" = alloca i64, align 8
  %"14_0" = alloca { i32, { [2 x i64] }, { [2 x i64] } }, align 8
  %"16_0" = alloca [2 x i64], align 8
  %"0" = alloca [2 x i64], align 8
  %"08" = alloca [2 x i64], align 8
  %"21_0" = alloca { i32, i8* }, align 8
  %"18_0" = alloca [2 x i64], align 8
  %"22_0" = alloca [2 x i64], align 8
  %"013" = alloca [2 x i64], align 8
  %"24_0" = alloca [2 x i64], align 8
  %"26_0" = alloca { i32, {}, { i64 } }, align 8
  %"018" = alloca { i32, {}, { i64 } }, align 8
  %"28_0" = alloca i64, align 8
  %"021" = alloca i64, align 8
  %"33_0" = alloca { i32, i8* }, align 8
  %"34_0" = alloca i64, align 8
  %"025" = alloca i64, align 8
  %"36_0" = alloca i64, align 8
  %"38_0" = alloca { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, align 8
  %"031" = alloca { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, align 8
  %"40_0" = alloca i64, align 8
  %"40_1" = alloca [2 x i64], align 8
  %"034" = alloca i64, align 8
  %"1" = alloca [2 x i64], align 8
  %"037" = alloca i64, align 8
  %"138" = alloca [2 x i64], align 8
  %"45_0" = alloca { i32, i8* }, align 8
  %"42_0" = alloca i64, align 8
  %"42_1" = alloca [2 x i64], align 8
  %"46_0" = alloca i64, align 8
  %"46_1" = alloca [2 x i64], align 8
  %"046" = alloca i64, align 8
  %"147" = alloca [2 x i64], align 8
  %"48_0" = alloca i64, align 8
  %"48_1" = alloca [2 x i64], align 8
  %"50_0" = alloca { i32, {}, { i64, [1 x i64] } }, align 8
  %"51_0" = alloca i64, align 8
  %"51_1" = alloca [1 x i64], align 8
  %"054" = alloca i64, align 8
  %"155" = alloca [1 x i64], align 8
  %"56_0" = alloca { i32, i8* }, align 8
  %"57_0" = alloca i64, align 8
  %"57_1" = alloca [1 x i64], align 8
  %"061" = alloca i64, align 8
  %"162" = alloca [1 x i64], align 8
  %"59_0" = alloca i64, align 8
  %"59_1" = alloca [1 x i64], align 8
  %"61_0" = alloca { i32, {}, { i64, [0 x i64] } }, align 8
  %"62_0" = alloca i64, align 8
  %"62_1" = alloca [0 x i64], align 8
  %"069" = alloca i64, align 8
  %"170" = alloca [0 x i64], align 8
  %"67_0" = alloca { i32, i8* }, align 8
  %"68_0" = alloca i64, align 8
  %"68_1" = alloca [0 x i64], align 8
  %"076" = alloca i64, align 8
  %"177" = alloca [0 x i64], align 8
  %"70_0" = alloca i64, align 8
  %"70_1" = alloca [0 x i64], align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"12_0", align 4
  store i64 1, i64* %"10_0", align 4
  %"10_01" = load i64, i64* %"10_0", align 4
  %"12_02" = load i64, i64* %"12_0", align 4
  %0 = insertvalue [2 x i64] undef, i64 %"10_01", 0
  %1 = insertvalue [2 x i64] %0, i64 %"12_02", 1
  store [2 x i64] %1, [2 x i64]* %"13_0", align 4
  store i64 0, i64* %"8_0", align 4
  %"13_03" = load [2 x i64], [2 x i64]* %"13_0", align 4
  %"8_04" = load i64, i64* %"8_0", align 4
  %"10_05" = load i64, i64* %"10_0", align 4
  %2 = alloca i64, i32 2, align 8
  %3 = bitcast i64* %2 to [2 x i64]*
  store [2 x i64] %"13_03", [2 x i64]* %3, align 4
  %4 = getelementptr i64, i64* %2, i64 %"8_04"
  %5 = load i64, i64* %4, align 4
  %6 = getelementptr i64, i64* %2, i64 %"10_05"
  %7 = load i64, i64* %6, align 4
  store i64 %7, i64* %4, align 4
  store i64 %5, i64* %6, align 4
  %8 = bitcast i64* %2 to [2 x i64]*
  %9 = load [2 x i64], [2 x i64]* %8, align 4
  %10 = insertvalue { [2 x i64] } undef, [2 x i64] %9, 0
  %11 = insertvalue { i32, { [2 x i64] }, { [2 x i64] } } { i32 1, { [2 x i64] } poison, { [2 x i64] } poison }, { [2 x i64] } %10, 2
  %12 = insertvalue { [2 x i64] } undef, [2 x i64] %"13_03", 0
  %13 = insertvalue { i32, { [2 x i64] }, { [2 x i64] } } { i32 0, { [2 x i64] } poison, { [2 x i64] } poison }, { [2 x i64] } %12, 1
  %14 = icmp ult i64 %"8_04", 2
  %15 = icmp ult i64 %"10_05", 2
  %16 = and i1 %14, %15
  %17 = select i1 %16, { i32, { [2 x i64] }, { [2 x i64] } } %11, { i32, { [2 x i64] }, { [2 x i64] } } %13
  store { i32, { [2 x i64] }, { [2 x i64] } } %17, { i32, { [2 x i64] }, { [2 x i64] } }* %"14_0", align 4
  %"14_06" = load { i32, { [2 x i64] }, { [2 x i64] } }, { i32, { [2 x i64] }, { [2 x i64] } }* %"14_0", align 4
  %18 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_06", 0
  switch i32 %18, label %19 [
    i32 1, label %22
  ]

19:                                               ; preds = %entry_block
  %20 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_06", 1
  %21 = extractvalue { [2 x i64] } %20, 0
  store [2 x i64] %21, [2 x i64]* %"08", align 4
  br label %cond_16_case_0

22:                                               ; preds = %entry_block
  %23 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_06", 2
  %24 = extractvalue { [2 x i64] } %23, 0
  store [2 x i64] %24, [2 x i64]* %"013", align 4
  br label %cond_16_case_1

cond_16_case_0:                                   ; preds = %19
  %"09" = load [2 x i64], [2 x i64]* %"08", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, { i32, i8* }* %"21_0", align 8
  store [2 x i64] %"09", [2 x i64]* %"18_0", align 4
  %"21_010" = load { i32, i8* }, { i32, i8* }* %"21_0", align 8
  %"18_011" = load [2 x i64], [2 x i64]* %"18_0", align 4
  %25 = extractvalue { i32, i8* } %"21_010", 0
  %26 = extractvalue { i32, i8* } %"21_010", 1
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %25, i8* %26)
  call void @abort()
  store [2 x i64] zeroinitializer, [2 x i64]* %"22_0", align 4
  %"22_012" = load [2 x i64], [2 x i64]* %"22_0", align 4
  store [2 x i64] %"22_012", [2 x i64]* %"0", align 4
  br label %cond_exit_16

cond_16_case_1:                                   ; preds = %22
  %"014" = load [2 x i64], [2 x i64]* %"013", align 4
  store [2 x i64] %"014", [2 x i64]* %"24_0", align 4
  %"24_015" = load [2 x i64], [2 x i64]* %"24_0", align 4
  store [2 x i64] %"24_015", [2 x i64]* %"0", align 4
  br label %cond_exit_16

cond_exit_16:                                     ; preds = %cond_16_case_1, %cond_16_case_0
  %"07" = load [2 x i64], [2 x i64]* %"0", align 4
  store [2 x i64] %"07", [2 x i64]* %"16_0", align 4
  %"16_016" = load [2 x i64], [2 x i64]* %"16_0", align 4
  %"8_017" = load i64, i64* %"8_0", align 4
  %28 = icmp ult i64 %"8_017", 2
  br i1 %28, label %30, label %29

29:                                               ; preds = %cond_exit_16
  store { i32, {}, { i64 } } { i32 0, {} undef, { i64 } poison }, { i32, {}, { i64 } }* %"018", align 4
  br label %37

30:                                               ; preds = %cond_exit_16
  %31 = alloca i64, i32 2, align 8
  %32 = bitcast i64* %31 to [2 x i64]*
  store [2 x i64] %"16_016", [2 x i64]* %32, align 4
  %33 = getelementptr inbounds i64, i64* %31, i64 %"8_017"
  %34 = load i64, i64* %33, align 4
  %35 = insertvalue { i64 } undef, i64 %34, 0
  %36 = insertvalue { i32, {}, { i64 } } { i32 1, {} poison, { i64 } poison }, { i64 } %35, 2
  store { i32, {}, { i64 } } %36, { i32, {}, { i64 } }* %"018", align 4
  br label %37

37:                                               ; preds = %29, %30
  %"019" = load { i32, {}, { i64 } }, { i32, {}, { i64 } }* %"018", align 4
  store { i32, {}, { i64 } } %"019", { i32, {}, { i64 } }* %"26_0", align 4
  %"26_020" = load { i32, {}, { i64 } }, { i32, {}, { i64 } }* %"26_0", align 4
  %38 = extractvalue { i32, {}, { i64 } } %"26_020", 0
  switch i32 %38, label %39 [
    i32 1, label %41
  ]

39:                                               ; preds = %37
  %40 = extractvalue { i32, {}, { i64 } } %"26_020", 1
  br label %cond_28_case_0

41:                                               ; preds = %37
  %42 = extractvalue { i32, {}, { i64 } } %"26_020", 2
  %43 = extractvalue { i64 } %42, 0
  store i64 %43, i64* %"025", align 4
  br label %cond_28_case_1

cond_28_case_0:                                   ; preds = %39
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"33_0", align 8
  %"33_023" = load { i32, i8* }, { i32, i8* }* %"33_0", align 8
  %44 = extractvalue { i32, i8* } %"33_023", 0
  %45 = extractvalue { i32, i8* } %"33_023", 1
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %44, i8* %45)
  call void @abort()
  store i64 0, i64* %"34_0", align 4
  %"34_024" = load i64, i64* %"34_0", align 4
  store i64 %"34_024", i64* %"021", align 4
  br label %cond_exit_28

cond_28_case_1:                                   ; preds = %41
  %"026" = load i64, i64* %"025", align 4
  store i64 %"026", i64* %"36_0", align 4
  %"36_027" = load i64, i64* %"36_0", align 4
  store i64 %"36_027", i64* %"021", align 4
  br label %cond_exit_28

cond_exit_28:                                     ; preds = %cond_28_case_1, %cond_28_case_0
  %"022" = load i64, i64* %"021", align 4
  store i64 %"022", i64* %"28_0", align 4
  %"16_028" = load [2 x i64], [2 x i64]* %"16_0", align 4
  %"10_029" = load i64, i64* %"10_0", align 4
  %"28_030" = load i64, i64* %"28_0", align 4
  %47 = icmp ult i64 %"10_029", 2
  br i1 %47, label %52, label %48

48:                                               ; preds = %cond_exit_28
  %49 = insertvalue { i64, [2 x i64] } undef, i64 %"28_030", 0
  %50 = insertvalue { i64, [2 x i64] } %49, [2 x i64] %"16_028", 1
  %51 = insertvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } { i32 0, { i64, [2 x i64] } poison, { i64, [2 x i64] } poison }, { i64, [2 x i64] } %50, 1
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %51, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"031", align 4
  br label %62

52:                                               ; preds = %cond_exit_28
  %53 = alloca i64, i32 2, align 8
  %54 = bitcast i64* %53 to [2 x i64]*
  store [2 x i64] %"16_028", [2 x i64]* %54, align 4
  %55 = getelementptr inbounds i64, i64* %53, i64 %"10_029"
  %56 = load i64, i64* %55, align 4
  store i64 %"28_030", i64* %55, align 4
  %57 = bitcast i64* %53 to [2 x i64]*
  %58 = load [2 x i64], [2 x i64]* %57, align 4
  %59 = insertvalue { i64, [2 x i64] } undef, i64 %56, 0
  %60 = insertvalue { i64, [2 x i64] } %59, [2 x i64] %58, 1
  %61 = insertvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } { i32 1, { i64, [2 x i64] } poison, { i64, [2 x i64] } poison }, { i64, [2 x i64] } %60, 2
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %61, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"031", align 4
  br label %62

62:                                               ; preds = %48, %52
  %"032" = load { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"031", align 4
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"032", { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"38_0", align 4
  %"38_033" = load { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"38_0", align 4
  %63 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_033", 0
  switch i32 %63, label %64 [
    i32 1, label %68
  ]

64:                                               ; preds = %62
  %65 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_033", 1
  %66 = extractvalue { i64, [2 x i64] } %65, 0
  %67 = extractvalue { i64, [2 x i64] } %65, 1
  store i64 %66, i64* %"037", align 4
  store [2 x i64] %67, [2 x i64]* %"138", align 4
  br label %cond_40_case_0

68:                                               ; preds = %62
  %69 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_033", 2
  %70 = extractvalue { i64, [2 x i64] } %69, 0
  %71 = extractvalue { i64, [2 x i64] } %69, 1
  store i64 %70, i64* %"046", align 4
  store [2 x i64] %71, [2 x i64]* %"147", align 4
  br label %cond_40_case_1

cond_40_case_0:                                   ; preds = %64
  %"039" = load i64, i64* %"037", align 4
  %"140" = load [2 x i64], [2 x i64]* %"138", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, { i32, i8* }* %"45_0", align 8
  store i64 %"039", i64* %"42_0", align 4
  store [2 x i64] %"140", [2 x i64]* %"42_1", align 4
  %"45_041" = load { i32, i8* }, { i32, i8* }* %"45_0", align 8
  %"42_042" = load i64, i64* %"42_0", align 4
  %"42_143" = load [2 x i64], [2 x i64]* %"42_1", align 4
  %72 = extractvalue { i32, i8* } %"45_041", 0
  %73 = extractvalue { i32, i8* } %"45_041", 1
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %72, i8* %73)
  call void @abort()
  store i64 0, i64* %"46_0", align 4
  store [2 x i64] zeroinitializer, [2 x i64]* %"46_1", align 4
  %"46_044" = load i64, i64* %"46_0", align 4
  %"46_145" = load [2 x i64], [2 x i64]* %"46_1", align 4
  store i64 %"46_044", i64* %"034", align 4
  store [2 x i64] %"46_145", [2 x i64]* %"1", align 4
  br label %cond_exit_40

cond_40_case_1:                                   ; preds = %68
  %"048" = load i64, i64* %"046", align 4
  %"149" = load [2 x i64], [2 x i64]* %"147", align 4
  store i64 %"048", i64* %"48_0", align 4
  store [2 x i64] %"149", [2 x i64]* %"48_1", align 4
  %"48_050" = load i64, i64* %"48_0", align 4
  %"48_151" = load [2 x i64], [2 x i64]* %"48_1", align 4
  store i64 %"48_050", i64* %"034", align 4
  store [2 x i64] %"48_151", [2 x i64]* %"1", align 4
  br label %cond_exit_40

cond_exit_40:                                     ; preds = %cond_40_case_1, %cond_40_case_0
  %"035" = load i64, i64* %"034", align 4
  %"136" = load [2 x i64], [2 x i64]* %"1", align 4
  store i64 %"035", i64* %"40_0", align 4
  store [2 x i64] %"136", [2 x i64]* %"40_1", align 4
  %"40_152" = load [2 x i64], [2 x i64]* %"40_1", align 4
  %75 = alloca i64, i32 2, align 8
  %76 = bitcast i64* %75 to [2 x i64]*
  store [2 x i64] %"40_152", [2 x i64]* %76, align 4
  %77 = getelementptr i64, i64* %75, i32 1
  %78 = load i64, i64* %75, align 4
  %79 = bitcast i64* %77 to [1 x i64]*
  %80 = load [1 x i64], [1 x i64]* %79, align 4
  %81 = insertvalue { i64, [1 x i64] } undef, i64 %78, 0
  %82 = insertvalue { i64, [1 x i64] } %81, [1 x i64] %80, 1
  %83 = insertvalue { i32, {}, { i64, [1 x i64] } } { i32 1, {} poison, { i64, [1 x i64] } poison }, { i64, [1 x i64] } %82, 2
  store { i32, {}, { i64, [1 x i64] } } %83, { i32, {}, { i64, [1 x i64] } }* %"50_0", align 4
  %"50_053" = load { i32, {}, { i64, [1 x i64] } }, { i32, {}, { i64, [1 x i64] } }* %"50_0", align 4
  %84 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_053", 0
  switch i32 %84, label %85 [
    i32 1, label %87
  ]

85:                                               ; preds = %cond_exit_40
  %86 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_053", 1
  br label %cond_51_case_0

87:                                               ; preds = %cond_exit_40
  %88 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_053", 2
  %89 = extractvalue { i64, [1 x i64] } %88, 0
  %90 = extractvalue { i64, [1 x i64] } %88, 1
  store i64 %89, i64* %"061", align 4
  store [1 x i64] %90, [1 x i64]* %"162", align 4
  br label %cond_51_case_1

cond_51_case_0:                                   ; preds = %85
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, { i32, i8* }* %"56_0", align 8
  %"56_058" = load { i32, i8* }, { i32, i8* }* %"56_0", align 8
  %91 = extractvalue { i32, i8* } %"56_058", 0
  %92 = extractvalue { i32, i8* } %"56_058", 1
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %91, i8* %92)
  call void @abort()
  store i64 0, i64* %"57_0", align 4
  store [1 x i64] zeroinitializer, [1 x i64]* %"57_1", align 4
  %"57_059" = load i64, i64* %"57_0", align 4
  %"57_160" = load [1 x i64], [1 x i64]* %"57_1", align 4
  store i64 %"57_059", i64* %"054", align 4
  store [1 x i64] %"57_160", [1 x i64]* %"155", align 4
  br label %cond_exit_51

cond_51_case_1:                                   ; preds = %87
  %"063" = load i64, i64* %"061", align 4
  %"164" = load [1 x i64], [1 x i64]* %"162", align 4
  store i64 %"063", i64* %"59_0", align 4
  store [1 x i64] %"164", [1 x i64]* %"59_1", align 4
  %"59_065" = load i64, i64* %"59_0", align 4
  %"59_166" = load [1 x i64], [1 x i64]* %"59_1", align 4
  store i64 %"59_065", i64* %"054", align 4
  store [1 x i64] %"59_166", [1 x i64]* %"155", align 4
  br label %cond_exit_51

cond_exit_51:                                     ; preds = %cond_51_case_1, %cond_51_case_0
  %"056" = load i64, i64* %"054", align 4
  %"157" = load [1 x i64], [1 x i64]* %"155", align 4
  store i64 %"056", i64* %"51_0", align 4
  store [1 x i64] %"157", [1 x i64]* %"51_1", align 4
  %"51_167" = load [1 x i64], [1 x i64]* %"51_1", align 4
  %94 = alloca i64, align 8
  %95 = bitcast i64* %94 to [1 x i64]*
  store [1 x i64] %"51_167", [1 x i64]* %95, align 4
  %96 = getelementptr i64, i64* %94, i32 0
  %97 = load i64, i64* %96, align 4
  %98 = bitcast i64* %94 to [0 x i64]*
  %99 = load [0 x i64], [0 x i64]* %98, align 4
  %100 = insertvalue { i64, [0 x i64] } undef, i64 %97, 0
  %101 = insertvalue { i64, [0 x i64] } %100, [0 x i64] %99, 1
  %102 = insertvalue { i32, {}, { i64, [0 x i64] } } { i32 1, {} poison, { i64, [0 x i64] } poison }, { i64, [0 x i64] } %101, 2
  store { i32, {}, { i64, [0 x i64] } } %102, { i32, {}, { i64, [0 x i64] } }* %"61_0", align 4
  %"61_068" = load { i32, {}, { i64, [0 x i64] } }, { i32, {}, { i64, [0 x i64] } }* %"61_0", align 4
  %103 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_068", 0
  switch i32 %103, label %104 [
    i32 1, label %106
  ]

104:                                              ; preds = %cond_exit_51
  %105 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_068", 1
  br label %cond_62_case_0

106:                                              ; preds = %cond_exit_51
  %107 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_068", 2
  %108 = extractvalue { i64, [0 x i64] } %107, 0
  %109 = extractvalue { i64, [0 x i64] } %107, 1
  store i64 %108, i64* %"076", align 4
  store [0 x i64] %109, [0 x i64]* %"177", align 4
  br label %cond_62_case_1

cond_62_case_0:                                   ; preds = %104
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, { i32, i8* }* %"67_0", align 8
  %"67_073" = load { i32, i8* }, { i32, i8* }* %"67_0", align 8
  %110 = extractvalue { i32, i8* } %"67_073", 0
  %111 = extractvalue { i32, i8* } %"67_073", 1
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %110, i8* %111)
  call void @abort()
  store i64 0, i64* %"68_0", align 4
  store [0 x i64] zeroinitializer, [0 x i64]* %"68_1", align 4
  %"68_074" = load i64, i64* %"68_0", align 4
  %"68_175" = load [0 x i64], [0 x i64]* %"68_1", align 4
  store i64 %"68_074", i64* %"069", align 4
  store [0 x i64] %"68_175", [0 x i64]* %"170", align 4
  br label %cond_exit_62

cond_62_case_1:                                   ; preds = %106
  %"078" = load i64, i64* %"076", align 4
  %"179" = load [0 x i64], [0 x i64]* %"177", align 4
  store i64 %"078", i64* %"70_0", align 4
  store [0 x i64] %"179", [0 x i64]* %"70_1", align 4
  %"70_080" = load i64, i64* %"70_0", align 4
  %"70_181" = load [0 x i64], [0 x i64]* %"70_1", align 4
  store i64 %"70_080", i64* %"069", align 4
  store [0 x i64] %"70_181", [0 x i64]* %"170", align 4
  br label %cond_exit_62

cond_exit_62:                                     ; preds = %cond_62_case_1, %cond_62_case_0
  %"071" = load i64, i64* %"069", align 4
  %"172" = load [0 x i64], [0 x i64]* %"170", align 4
  store i64 %"071", i64* %"62_0", align 4
  store [0 x i64] %"172", [0 x i64]* %"62_1", align 4
  %"62_182" = load [0 x i64], [0 x i64]* %"62_1", align 4
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
