---
source: src/custom/conversions.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [58 x i8] c"Float value too big to convert to int of given width (32)\00", align 1

define { i32, { { i32, i8* } }, { i32 } } @_hl.main.1(double %0) {
alloca_block:
  %"0" = alloca { i32, { { i32, i8* } }, { i32 } }, align 8
  %"2_0" = alloca double, align 8
  %"4_0" = alloca { i32, { { i32, i8* } }, { i32 } }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store double %0, double* %"2_0", align 8
  %"2_01" = load double, double* %"2_0", align 8
  %max_int_pos = call i32 @llvm.abs.i32(i32 2147483647, i1 false)
  %max_flt_pos = sitofp i32 %max_int_pos to double
  %flt_pos = call double @llvm.fabs.f64(double %"2_01")
  %conversion_valid = fcmp ole double %flt_pos, %max_flt_pos
  %conversion_valid_i32 = zext i1 %conversion_valid to i32
  %1 = fptosi double %"2_01" to i32
  %result_row = insertvalue { i32 } undef, i32 %1, 0
  %conversion_result = insertvalue { i32, { { i32, i8* } }, { i32 } } { i32 undef, { i32, i8* } { i32 2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @0, i32 0, i32 0) }, { i32 } undef }, { i32 } %result_row, 2
  %tag = insertvalue { i32, { { i32, i8* } }, { i32 } } %conversion_result, i32 %conversion_valid_i32, 0
  store { i32, { { i32, i8* } }, { i32 } } %tag, { i32, { { i32, i8* } }, { i32 } }* %"4_0", align 8
  %"4_02" = load { i32, { { i32, i8* } }, { i32 } }, { i32, { { i32, i8* } }, { i32 } }* %"4_0", align 8
  store { i32, { { i32, i8* } }, { i32 } } %"4_02", { i32, { { i32, i8* } }, { i32 } }* %"0", align 8
  %"03" = load { i32, { { i32, i8* } }, { i32 } }, { i32, { { i32, i8* } }, { i32 } }* %"0", align 8
  ret { i32, { { i32, i8* } }, { i32 } } %"03"
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }
