---
source: tests/guppy.rs
info:
  program: hugr-llvm
  args:
    - "-"
---
success: true
exit_code: 0
----- stdout -----
; ModuleID = 'module'
source_filename = "module"

define i32 @_hl.teleport.25(i32 %0, i32 %1) {
alloca_block:
  %qalloc_call = call i32 @___qalloc()
  %h_call = call i32 @___h(i32 %qalloc_call)
  %rz_call = call { i32, i32 } @___cx(i32 %h_call, i32 %1)
  %2 = extractvalue { i32, i32 } %rz_call, 0
  %3 = extractvalue { i32, i32 } %rz_call, 1
  %4 = insertvalue { i32, i32 } undef, i32 %2, 0
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1
  %6 = insertvalue { { i32, i32 } } poison, { i32, i32 } %5, 0
  %7 = extractvalue { { i32, i32 } } %6, 0
  %8 = extractvalue { i32, i32 } %7, 0
  %9 = extractvalue { i32, i32 } %7, 1
  %rz_call14 = call { i32, i32 } @___cx.1(i32 %0, i32 %8)
  %10 = extractvalue { i32, i32 } %rz_call14, 0
  %11 = extractvalue { i32, i32 } %rz_call14, 1
  %12 = insertvalue { i32, i32 } undef, i32 %10, 0
  %13 = insertvalue { i32, i32 } %12, i32 %11, 1
  %14 = insertvalue { { i32, i32 } } poison, { i32, i32 } %13, 0
  %15 = extractvalue { { i32, i32 } } %14, 0
  %16 = extractvalue { i32, i32 } %15, 0
  %17 = extractvalue { i32, i32 } %15, 1
  %h_call19 = call i32 @___h.2(i32 %16)
  %measure_call = call { i32, { i32, {}, {} } } @___measure(i32 %h_call19)
  %18 = extractvalue { i32, { i32, {}, {} } } %measure_call, 0
  %19 = extractvalue { i32, { i32, {}, {} } } %measure_call, 1
  call void @___qfree(i32 %18)
  %20 = extractvalue { i32, {}, {} } %19, 0
  %cond = icmp eq i32 %20, 1
  br i1 %cond, label %24, label %21

21:                                               ; preds = %alloca_block
  %22 = extractvalue { i32, {}, {} } %19, 1
  %23 = extractvalue { {} } undef, 0
  br label %33

24:                                               ; preds = %alloca_block
  %25 = extractvalue { i32, {}, {} } %19, 2
  %z_call = call i32 @___z(i32 %9)
  %26 = extractvalue { {} } undef, 0
  br label %33

27:                                               ; preds = %33
  %28 = extractvalue { i32, {}, {} } %35, 1
  %29 = extractvalue { {} } undef, 0
  br label %37

30:                                               ; preds = %33
  %31 = extractvalue { i32, {}, {} } %35, 2
  %x_call = call i32 @___x(i32 %"9_0.0")
  %32 = extractvalue { {} } undef, 0
  br label %37

33:                                               ; preds = %21, %24
  %"9_0.0" = phi i32 [ %9, %21 ], [ %z_call, %24 ]
  %measure_call49 = call { i32, { i32, {}, {} } } @___measure.3(i32 %17)
  %34 = extractvalue { i32, { i32, {}, {} } } %measure_call49, 0
  %35 = extractvalue { i32, { i32, {}, {} } } %measure_call49, 1
  call void @___qfree.4(i32 %34)
  %36 = extractvalue { i32, {}, {} } %35, 0
  %cond73 = icmp eq i32 %36, 1
  br i1 %cond73, label %30, label %27

37:                                               ; preds = %27, %30
  %"12_0.0" = phi i32 [ %"9_0.0", %27 ], [ %x_call, %30 ]
  %38 = extractvalue { {} } undef, 0
  ret i32 %"12_0.0"
}

declare i32 @___qalloc()

declare i32 @___h(i32)

declare { i32, i32 } @___cx(i32, i32)

declare { i32, i32 } @___cx.1(i32, i32)

declare i32 @___h.2(i32)

declare { i32, { i32, {}, {} } } @___measure(i32)

declare void @___qfree(i32)

declare i32 @___z(i32)

declare { i32, { i32, {}, {} } } @___measure.3(i32)

declare void @___qfree.4(i32)

declare i32 @___x(i32)

define { i32, {}, {} } @_hl.main.26() {
alloca_block:
  %qalloc_call = call i32 @___qalloc.5()
  %qalloc_call2 = call i32 @___qalloc.6()
  %0 = insertvalue { i32, i32 } undef, i32 %qalloc_call2, 0
  %1 = insertvalue { i32, i32 } %0, i32 %qalloc_call, 1
  %2 = insertvalue { { i32, i32 } } poison, { i32, i32 } %1, 0
  %3 = extractvalue { { i32, i32 } } %2, 0
  %4 = extractvalue { i32, i32 } %3, 0
  %5 = extractvalue { i32, i32 } %3, 1
  %6 = call i32 @_hl.teleport.25(i32 %4, i32 %5)
  %measure_call = call { i32, { i32, {}, {} } } @___measure.7(i32 %6)
  %7 = extractvalue { i32, { i32, {}, {} } } %measure_call, 0
  %8 = extractvalue { i32, { i32, {}, {} } } %measure_call, 1
  call void @___qfree.8(i32 %7)
  %9 = extractvalue { {} } undef, 0
  ret { i32, {}, {} } %8
}

declare i32 @___qalloc.5()

declare i32 @___qalloc.6()

declare { i32, { i32, {}, {} } } @___measure.7(i32)

declare void @___qfree.8(i32)


----- stderr -----
HUGR valid!
